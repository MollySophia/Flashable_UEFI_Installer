#!/sbin/sh
# edk2-msm Flashable UEFI Installer
# modified from the TWRP A/B Installer Backend by osm0sis, Dees_Troy and topjohnwu

OUTFD=/proc/self/fd/$2;
ZIPFILE="$3";

ui_print() {
  if $BOOTMODE; then
    echo "$1";
  else
    echo -e "ui_print $1ui_print" >> $OUTFD;
  fi;
}
abort() { ui_print " "; ui_print "$1"; exit 1; }

# detect Magisk app/booted flashing
BOOTMODE=false;
ps | grep zygote | grep -v grep >/dev/null && BOOTMODE=true;
$BOOTMODE || ps -A 2>/dev/null | grep zygote | grep -v grep >/dev/null && BOOTMODE=true;

ui_print "#############################################";
ui_print "#  edk2-msm UEFI installer for A/B devices  #";
ui_print "#############################################";
ui_print " ";

# /dev/tmp is safe for both booted and recovery installs
tmp=/dev/tmp/uefi-install;
# target partition without the slot suffix
if [ -e /dev/block/bootdevice/by-name/recovery_b ]; then
  abort "Recovery partition detected! Cancelling the installation";
else
  target=/dev/block/bootdevice/by-name/boot;
fi;
name=$(basename $target);

ui_print "Unpacking the installer...";
rm -rf $tmp;
mkdir -p $tmp;
unzip -o "$ZIPFILE" -d $tmp || abort "Failed to extract zip!";

cd $tmp;
uefipayload=`(ls *_UEFI-Padding.fd) 2>/dev/null`;
[ "$uefipayload" ] || abort "No edk2-msm UEFI image found in zip!";

tool=$tmp/magiskboot;
chmod 755 $tool;

ui_print " ";
for slot in _a _b; do
  if [ "$uefipayload" ]; then
    ui_print "Running image patcher on $name$slot...";
    dd bs=1048576 if=$target$slot of=boot.img || abort "Failed to dump image!";
    $tool unpack -h boot.img || abort "Failed to unpack image!";

    if [ "$(dd if=kernel bs=1 count=8 skip=64 status=none)" = "EDK2-MSM" ]; then
      ui_print "Patched boot.img with UEFI installed detected!";
      ui_print "Updating...";
      kerneloffset=`expr $(dd if=kernel bs=1 count=4 skip=16 status=none | od -An -t u) + 2097152`
      dd if=kernel iflag=skip_bytes skip=$kerneloffset of=kernel_orig bs=512
      rm -f kernel
    else
      ui_print "Stock boot.img detected!";
      ui_print "Installing...";
      mv kernel kernel_orig
    fi;

    cat $uefipayload kernel_orig > kernel
    rm -f kernel_orig

    $tool repack boot.img || abort "Failed to repack image!";
    $tool cleanup;
  fi;

  blockdev --setrw $target$slot;
  cat new-boot.img /dev/zero > $target$slot 2>/dev/null || true;
  rm -f new-boot.img;
done;

if [ "$uefipayload" ]; then
  ui_print " ";
  ui_print "Image patching complete!";
fi;

cd /;
rm -rf /dev/tmp;

ui_print " ";
ui_print "Done installing edk2-msm UEFI!";
ui_print "Normal boot will enter Android, while Recovery mode is replaced with UEFI"
